# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    displayName: Build stage
    jobs:  
    - job: Build
      displayName: Build job
      
      steps:
      - script: echo Hello, world!
        displayName: 'Run a one-line script'

      - script: |
          echo Add other tasks to build, test, and deploy your project.
          echo See https://aka.ms/yaml
          echo $(imageRepository)
          echo $(dockerRegistryServiceConnection)
          echo $(dockerfilePath)
        displayName: 'Run a multi-line script'
      
      - task: Docker@2
        inputs:
          containerRegistry: 'dockerresitryazure'
          repository: 'vikaskalla/testkubernetesdemo'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'
          
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: 'manifests'
          artifact: 'manifests'
          publishLocation: 'pipeline'
  
  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    jobs:
    - deployment: Deploy
      displayName: Deploy job
      environment: 'dev' #customize with your environment
      strategy:
        runOnce:
          deploy:
            steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                artifactName: 'manifests'
                downloadPath: '$(System.ArtifactsDirectory)/manifests'

            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                action: 'createSecret'
                kubernetesServiceConnection: 'myapp-default'
                namespace: 'default'
                secretType: 'dockerRegistry'
                secretName: 'test-deploy-secret'
                dockerRegistryEndpoint: 'dockerresitryazure'

            - task: KubernetesManifest@0
              displayName: Deploy to Kubernetes cluster
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'myapp-default'
                namespace: 'default'
                manifests: |
                  $(System.ArtifactsDirectory)/manifests/deployment.yml
                  $(System.ArtifactsDirectory)/manifests/service.yml
                containers: 'vikaskalla/testkubernetesdemo:$(Build.BuildId)'
                imagePullSecrets: 'test-deploy-secret'
